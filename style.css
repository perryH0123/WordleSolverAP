body {
    background-color: hsl(240,3%,7%);
    /*display: grid;
    grid-template-columns: repeat(2, 50vw);
    gap: 0;
    */
    padding: 0;
}

.view-output {
    left: 3.5vh;
    top: 3.5vh;
    width: 7.5vh;
    height: 7.5vh;
    border-radius: 50%;
    border: none;
    text-shadow: 0.05em 0.05em #000;
    font-size: 2em;
    position: fixed;
    z-index: 255;
    transition: transform 200ms ease-in-out;
    pointer-events: all;
    user-select: auto;
    cursor: pointer;
}

.view-output:hover {
    transform: scale(1.1);
}

.processing {
    background-color: hsl(0,53%,57%);
}

.game {
    grid-column: span 1;
    background-color: inherit;
    display:  flex;
    flex-direction: column;
    min-height: 100vh;
    margin: 0;
    padding: 1em;
    font-size: clamp(.5rem, 2.5vmin, 1.5rem);
}

header {
    color: white;
    display: block;
    position:relative;
    top: 0%;
    left: 0%;
    width: 100%;
    text-align: center;
    font-family: Arial, Helvetica, sans-serif;
    margin: 0 auto;
    margin-top: -1em;
    font-size: 0.8em;
}

.keyboard {
    display: grid;
    grid-template-columns: repeat(20, minmax(auto, 1.15em));
    grid-auto-rows: 3em;
    gap: .25em;
    justify-content: center;
}

.key {
    font-size: inherit;
    grid-column: span 2;
    border: none;
    padding: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: hsl(
        var(--hue, 200),
        var(--sat, 1%),
        calc(var(--light-offset, 0%) + var(--light, 51%))
        );
    color: white;
    fill: white;
    text-transform: uppercase;
    border-radius: .25em;
    cursor: pointer;
    user-select: none;
    transition: background-color 300ms ease-in-out;
}

.key.large {
    grid-column: span 3;
}

.long {
    grid-column: span 4;
}

.key > svg {
    width: 1.75em;
    height: 1.75em;
} 

.key:hover:not([data-inactive]), .key:focus:not([data-inactive]) {
    --light-offset: 10%;
}

.key.wrong, [data-incorrect]{
    --light: 23%;
}

.key.wrong-location, [data-wrong-location]{
    --hue: 49;
    --sat: 51%;
    --light: 47%;
}

.key.correct, [data-correct]{
    --hue: 115;
    --sat: 29%;
    --light: 47%; 
}

.controls-label {
    font-size: minmax(auto, 1.2em);
    grid-column: span 20;
    text-align: center;
    color: white;
}

.reset {
    --hue : 360;
    --sat: 69%;
    --light: 42%;
}

.clear {
    --hue: 0;
    --sat: 0%;
    --light: 37%;
}

.guess-grid {
    display: grid;
    justify-content: center;
    align-content: center;
    flex-grow: 0.5;
    grid-template-columns: repeat(5, 4em);
    grid-template-rows: repeat(6, 4em);
    gap: 0.25em;
    margin-bottom: 1em;
}

.tile {
    font-family: Arial, Helvetica, sans-serif;
    font-size: 2em;
    color: white;
    border: 0.05em solid hsl(240,2%,23%);
    text-transform: uppercase;
    font-weight: bold;
    display: flex;
    justify-content: center;
    align-items: center;
    user-select: none;
    transition: transform 250ms linear;
}

.tile.shake {
    animation: shake 250ms ease-in-out;
}

.tile.flip {
    transform: rotateX(90deg);
}

.tile.grow {
    transform: scale(1.35);
}

@keyframes shake {
    10% {
        transform: translateX(-5%);
    }

    30% {
        transform: translateX(5%);
    }

    50% {
        transform: translateX(-7.5%);
    }

    75% {
        transform: translateX(7.5%);
    }

    90% {
        transform: translateX(-5%);
    }

    100% {
        transform: translateX(0%);
    }
}

.tile.dance {
    animation: dance 500ms ease-in-out;
}

@keyframes dance {
    20% {
        transform: translateY(-50%);
    }
    40% {
        transform: translateY(5%);
    }
    60% {
        transform: translateY(-25%);
    }
    80% {
        transform: translateY(2.5%);
    }
    90% {
        transform: translateY(-5%);
    }
    100% {
        transform: translateY(0%);
    }
}

.tile[data-state="active"] {
    border-color: hsl(200,1%,34%);
}

.tile[data-state="wrong"]{
    border: none;
    background-color: hsl(240,2%,23%);
}

.tile[data-state="wrong-location"]{
    border: none;
    background-color: hsl(49, 51%, 47%);
}

.tile[data-state="correct"]{
    border: none;
    background-color: hsl(115,29%,43%);
}

.inactive {
    --light-offset: -25%;
    user-select: none;
    cursor: default;
    pointer-events: none;
}

.alert-container {
    position: fixed;
    top: 10vh;
    left: 50vw;
    transform: translateX(-50%);
    z-index: 1;
    display: flex;
    flex-direction: column;
    align-items: center;
}

.alert {
    pointer-events: none;
    background-color: hsl(204,7%,85%);
    padding: .75em;
    border-radius: .25em;
    opacity: 0.9;
    transition: opacity 500ms ease-in-out;
    margin-bottom: .5em;
}

.alert:last-child {
    margin-bottom: 0;
}

.alert.hide {
    opacity: 0;
}

.output-sheet {
    position: absolute;
    top: 5em;
    z-index: 2;
    background-color: rgba(220,220,220,0.8);
    padding: 0.5em;
    border-radius: 0.3em;
    margin-top: 2em;
    width: 80%;
    align-self: center;
    transition: opacity 500ms ease-in-out, transform 500ms ease-out;
}

.output-sheet * {
    margin: 0;
}

.output-sheet h3 p{
    display: inline;
    margin-top: 0.4em;
}

.output-sheet .potential, .output-sheet .maximize {
    margin-top: 0.2em;
    min-height: 10vh;
    border: 1px solid gray;
    display: block;
    max-height: 30vh;
    width: 100%;
    overflow: auto;
}

.output-sheet div:last-child {
    margin-bottom: 0.2em;
}

.output-sheet p {
    min-height: 1em;
}   

.output-sheet .debug {
    margin-top: 0.3em;
    display: block;
    width: 100%;
    height: 20vh;
    background-color: hsl(221, 53%, 8%);
    color: #FFF;
    max-height: 20vh;
    overflow: auto;
}

.close {
    position:absolute;
    font-weight: 500;
    width: 2em;
    height: 2em;
    align-content: center;
    right:0.3em;
    top:0.3em;
    background-color: rgba(0,0,0,0);
    border: none;
    transition: color 200ms ease-in-out;
    color: rgb(0,0,0); 
    cursor: pointer;

}

.close:hover {
    color: rgb(250,250,250);
}

.hidden {
    opacity: 0;
}

.displayed {
    opacity: 1;
}

.up {
    transform: translateY(-30%);
}

.down {
    transform: translateY(0%);
}

[data-debug-clear] {
    user-select: text;
    cursor: pointer;
}